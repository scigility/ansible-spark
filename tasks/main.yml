---
- name: Create service account for Spark
  user:
    name: "{{ spark_user }}"
    system: yes
    home: "{{ spark_lib_dir }}"
    shell: "{{ spark_user_shell }}"
    state: present
    groups: "{{ spark_user_groups | join(',') }}"
  tags: ["spark-user"]
  when: spark_user_install_enabled 

- name: Ensure Spark configuration directory exists
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ spark_conf_dir }}"
  tags: ["config"]

- name: Ensure Spark log and run directories exist
  file:
    path: "{{ item }}"
    owner: "{{ spark_user }}"
    group: "{{ spark_user }}"
    mode: 0755
    state: directory
  with_items:
    - "{{ spark_log_dir }}"
    - "{{ spark_run_dir }}"

- name: Ensure Spark download and install directories exist
  file:
    path: "{{ item }}"
    mode: 0755
    state: directory
    follow: true
  with_items:
    - "{{ spark_src_dir }}"
    - "{{ spark_usr_parent_dir }}"

- name: copy Spark distribution to hosts
  copy:
    src: "files/spark-{{ spark_version }}.tgz"
    dest: "{{ spark_src_dir }}/spark-{{ spark_version }}.tgz" 
  when: spark_mirror_url | length == 0

- name: Download Spark distribution
  get_url:
    url: "{{ spark_mirror_url }}"
    dest: "{{ spark_src_dir }}/spark-{{ spark_version }}.tgz"
  when: spark_mirror_url | length > 0

- name: Extract Spark distribution
  unarchive:
    src: "{{ spark_src_dir }}/spark-{{ spark_version }}.tgz"
    dest: "{{ spark_usr_parent_dir }}"
    copy: no
    creates: "{{ spark_usr_dir_orig }}"
    owner: "{{ spark_user }}"
    group: "{{ spark_user }}"
    mode: 0755

- name: Setup Spark distribution symlinks
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  with_items:
    - { src: "{{ spark_usr_dir_orig }}", dest: "{{ spark_usr_dir }}" }
    - { src: "{{ spark_conf_dir_orig }}", dest: "{{ spark_conf_dir }}" }
  when: spark_symlinks_enabled
  tags: ["symlinks"]

- name: Create shims for Spark binaries
  template:
    src: spark-shim.j2
    dest: "/usr/bin/{{ item }}"
    mode: 0755
  with_items:
    - spark-class
    - spark-shell
    - spark-sql
    - spark-submit
  when: spark_shims_enabled
  tags: ["shims"]

- name: Ensure Spark work and temp work directories exist
  # Execute this task after setting up the symlinks to allow directories below them
  file:
    path: "{{ item }}"
    owner: "{{ spark_user }}"
    group: "{{ spark_user }}"
    mode: 0775
    state: directory
  with_items:
    - "{{ spark_work_dir }}"
    - "{{ spark_tmp_dir }}"
    - "{{ spark_yarn_conf_dir }}"

- name: Ensure Spark local directories exist
  file:
    path: "{{ item }}"
    owner: "{{ spark_user }}"
    group: "{{ spark_user }}"
    mode: "{{ spark_local_dir_mode }}"
    state: directory
  when: item != "/tmp"
  with_items: "{{ spark_local_dirs }}"
  tags: ["spark-local-dirs"]

- name: Configure Spark environment
  template:
    src: "{{ spark_env_src_path | default('spark-env.sh.j2') }}"
    dest: "{{ spark_conf_dir_orig }}/spark-env.sh"
  tags: ["config"]

- name: Configure Spark defaults config file
  template:
    src: "{{ spark_defaults_src_path | default('spark-defaults.conf.j2') }}"
    dest: "{{ spark_conf_dir_orig }}/spark-defaults.conf"
  tags: ["config"]

- include: spark-hive-site.yml
  tags: ["config","spark-hive-site"]

- include: spark-yarn-site.yml
  tags: ["config","spark-yarn-site"]

- include: spark-log4j.yml
  vars:
    log4j_template_file: "{{ spark_log4j_template_file | default('log4j.properties') }}"
  tags: ["config","spark-log4j"]
